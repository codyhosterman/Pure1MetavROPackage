<?xml version="1.0" encoding="UTF-8"?>
<dunes-script-module name="pure1RefreshConnectionCredentials" result-type="void" api-version="6.0.0" id="9d65c9b9-7e0f-4495-9ebb-3b7cf3227b33" version="1.0.0" allowed-operations="vef">
  <description><![CDATA[Stores Pure1 connection information in configuration element (eithe default one or use-specified one).]]></description>
  <param n="pureOneConnection" t="ConfigurationElement"><![CDATA[Configuration element]]></param>
  <param n="privateKey" t="string"><![CDATA[RSA private key]]></param>
  <param n="applicationID" t="string"><![CDATA[Pure1 REST access token]]></param>
  <script encoded="false"><![CDATA[try
{
	if (pureOneConnection != null)
	{
		var pureConfigElement = pureOneConnection;
		System.debug("A non-default configuration element was passed in. Using this one.");
	}
	else
	{
		var pureConfigElement = Server.createConfigurationElement( "Pure1/", "Connection" ); 
	}
}
catch(createError)
{
	if (createError == "InternalError: An element with the same name already exists in the category.")
	{
		System.debug("Connection element already exists. No need to create.");
		var configCategory = Server.getConfigurationElementCategoryWithPath("Pure1/");
		var configElements = configCategory.allConfigurationElements;
		for (var i=0;i < configElements.length;i++)
		{
			System.debug("Looking at element " + configElements[i].name);
			if (configElements[i].name == "Connection")
			{
				var pureConfigElement = configElements[i];
				break;
			}
		}
	}
	else
	{
		throw createError;
	}
}
System.debug("Using element " + pureConfigElement.name);
if (applicationID == "")
{
	try
	{
		pureConfigElement.getAttributeWithKey("applicationID").value
		System.warning("No updated application ID passed in. Keeping current value.");
	}
	catch (e)
	{
		throw "No application ID found. Please pass in an application ID";
	}
}
else
{
	pureConfigElement.setAttributeWithKey("applicationID",applicationID);
}
if (privateKey == "")
{
	try
	{
		pureConfigElement.getAttributeWithKey("privateKey").value
		System.warning("No updated private key passed in. Keeping current key.");
	}
	catch (e)
	{
		throw "No private key found. Please pass in a private key";
	}
}
else
{
	pureConfigElement.setAttributeWithKey("privateKey",privateKey);
}





]]></script>
</dunes-script-module>